import pandas as pd

def descriptive_stats(dataframe):
    # Ensure that 'Event_Type' and 'Reopen_Deltas_int' columns exist
    if 'Event_Type' not in dataframe.columns or 'Reopen_Deltas_int' not in dataframe.columns:
        raise ValueError("Required columns are missing from the dataframe.")
    
    # Print columns and the index name
    print("Columns in DataFrame:", dataframe.columns)
    print("Index name:", dataframe.index.name)
    
    # Filter reopenings
    reopenings = dataframe[dataframe['Event_Type'] == 'IP-Level Ticket Reopened']
    
    # Debugging: Check if any rows are filtered
    print("Number of rows with 'IP-Level Ticket Reopened':", len(reopenings))

    if reopenings.empty:
        print("No rows with 'IP-Level Ticket Reopened' found.")
        return pd.DataFrame()
    
    # Ensure that index is properly used
    if isinstance(reopenings.index, pd.MultiIndex):
        reopenings = reopenings.reset_index()

    # Group by the index and calculate statistics
    grouped = reopenings.groupby(reopenings.index)['Reopen_Deltas_int']

    # Calculate statistics
    stats_df = grouped.agg([
        'count',
        'mean',
        'std',
        'median',
        'min',
        'max',
        lambda x: x.quantile(0.25),
        lambda x: x.quantile(0.75),
        lambda x: x.quantile(0.05),
        lambda x: x.quantile(0.95)
    ]).reset_index()

    # Rename columns
    stats_df.columns = [
        'unique_ip_ticket_id',
        'Total Number of Reopenings',
        'Mean',
        'Standard Deviation',
        'Median',
        'Minimum',
        'Maximum',
        '25th Percentile',
        '75th Percentile',
        '5th Percentile',
        '95th Percentile'
    ]

    return stats_df

# Usage
desc_stats = descriptive_stats(deltas_explode)
print(desc_stats)
