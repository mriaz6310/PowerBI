-- This will output DROP + CREATE SERVER and CREATE USER MAPPING commands
WITH srv AS (
  SELECT
    s.oid,
    s.srvname,
    w.fdwname,
    CASE
      WHEN s.srvoptions IS NULL THEN ''
      ELSE ' OPTIONS (' ||
           array_to_string(
             ARRAY(
               SELECT quote_ident(split_part(o,'=',1)) || ' ' ||
                      quote_literal(substring(o from position('=' in o)+1))
               FROM unnest(s.srvoptions) AS o
             ), ', '
           ) || ')'
    END AS optstr
  FROM pg_foreign_server s
  JOIN pg_foreign_data_wrapper w ON w.oid = s.srvfdw
)
SELECT
  'DROP SERVER IF EXISTS ' || quote_ident(srvname) || ' CASCADE;'
FROM srv
UNION ALL
SELECT
  'CREATE SERVER ' || quote_ident(srvname) ||
  ' FOREIGN DATA WRAPPER ' || quote_ident(fdwname) || optstr || ';'
FROM srv
UNION ALL
SELECT
  'CREATE USER MAPPING FOR ' ||
  CASE WHEN m.umuser = 0 THEN 'PUBLIC' ELSE quote_ident(r.rolname) END ||
  ' SERVER ' || quote_ident(s.srvname) ||
  CASE
    WHEN m.umoptions IS NULL THEN ''
    ELSE ' OPTIONS (' ||
         array_to_string(
           ARRAY(
             SELECT quote_ident(split_part(o,'=',1)) || ' ' ||
                    quote_literal(substring(o from position('=' in o)+1))
             FROM unnest(m.umoptions) AS o
           ), ', '
         ) || ')'
  END || ';'
FROM pg_user_mappings m
JOIN pg_foreign_server s ON s.oid = m.srvid
LEFT JOIN pg_roles r ON r.oid = m.umuser
ORDER BY 1;




USE NPA;
GO
SELECT 
    name AS logical_name, 
    physical_name
FROM sys.database_files
WHERE type_desc = 'ROWS'   -- data files (includes .mdf + .ndf)
  AND RIGHT(physical_name,4) = '.ndf'
ORDER BY file_id;


USE NPA;
GO
DECLARE @OldPath NVARCHAR(260) = N'E:\SQLData\NPA';   -- current folder
DECLARE @NewPath NVARCHAR(260) = N'G:\SQLData\NPA';   -- new folder

SELECT 
    'ALTER DATABASE NPA MODIFY FILE (NAME = ' + QUOTENAME(df.name,'''')
    + ', FILENAME = ' + QUOTENAME(REPLACE(df.physical_name, @OldPath, @NewPath),'''') 
    + ');' AS cmd
FROM sys.database_files df
WHERE type_desc = 'ROWS'
  AND RIGHT(df.physical_name,4) = '.ndf'
ORDER BY file_id;

