import pandas as pd

def descriptive_stats_per_ticket(dataframe):
    # Group by unique_ip_ticket_id
    grouped = dataframe.groupby('unique_ip_ticket_id')

    # Create an empty list to store the results
    results = []

    # Iterate through each group and calculate statistics
    for ticket_id, group in grouped:
        reopenings = group[group['Event_Type'] == 'IP-Level Ticket Reopened']
        count_reopen = reopenings['Event_Type'].count()
        reopening_pct = reopenings['unique_ip_ticket_id'].nunique() / group['unique_ip_ticket_id'].nunique()

        days_mean = group['Reopen_Deltas_int'].mean()
        days_sd = group['Reopen_Deltas_int'].std()
        days_median = group['Reopen_Deltas_int'].median()
        reopen_min = group['Reopen_Deltas_int'].min()
        reopen_max = group['Reopen_Deltas_int'].max()

        lower_bound_pct = group['Reopen_Deltas_int'].quantile(0.25)
        upper_bound_pct = group['Reopen_Deltas_int'].quantile(0.75)
        five_lower_bound_pct = group['Reopen_Deltas_int'].quantile(0.05)
        ninety_five_upper_bound_pct = group['Reopen_Deltas_int'].quantile(0.95)

        # Append results to the list
        results.append({
            'unique_ip_ticket_id': ticket_id,
            'count_reopen': count_reopen,
            'reopening_pct': reopening_pct,
            'mean': days_mean,
            'sd': days_sd,
            'median': days_median,
            'min': reopen_min,
            'max': reopen_max,
            '25th_percentile': lower_bound_pct,
            '75th_percentile': upper_bound_pct,
            '5th_percentile': five_lower_bound_pct,
            '95th_percentile': ninety_five_upper_bound_pct
        })

    # Convert the results into a DataFrame
    results_df = pd.DataFrame(results)
    
    return results_df
