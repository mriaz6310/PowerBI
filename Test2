spark.table("bronze_finance.syn_lab_hs").createOrReplaceTempView("syn_lab_hs")


CREATE OR REPLACE TEMP VIEW silver_fact_resources_txn2 AS
SELECT
  -- Dimension IDs (use defaults if you don’t have dim tables yet)
  -1                               AS dim_vendor_id,
  NULL                             AS dim_period_id,
  NULL                             AS dim_project_id,
  NULL                             AS dim_employee_id,
  NULL                             AS dim_glaccount_id,
  NULL                             AS dim_organization_id,

  2                                AS dim_transaction_type_id,  -- << Txn 2
  1                                AS dim_pool_id,
  -1                               AS dim_vendor_emplid,
  NULL                             AS dim_schedule_period_id,
  NULL                             AS dim_ts_id,

  -- Keys / natural identifiers (Txn 2 is from LAB_HS, not TS header/line)
  NULL                             AS ts_hdr_seq_no,
  l.lab_hs_key                     AS ts_ln_key,        -- use LAB key as the line key
  NULL                             AS ts_ln_no,

  -- Dates
  l.period_date                    AS ts_dt,

  -- Resource + amounts
  'E'                              AS resource_type,
  CASE WHEN COALESCE(l.act_hrs,0) <> 0
       THEN COALESCE(l.act_amt,0) / l.act_hrs
       ELSE 0 END                  AS hourly_rate,
  COALESCE(l.act_hrs,0)            AS hours,
  COALESCE(l.act_hrs,0)            AS hours_pool_calc,
  COALESCE(l.act_amt,0)            AS lab_cst_amt,      -- “Direct Cost” in your proc

  -- Entered/charge hours (Txn2 uses ACT_*; align to fact shape)
  COALESCE(l.act_hrs,0)            AS entered_hrs,
  COALESCE(l.act_hrs,0)            AS chg_hrs,
  COALESCE(l.act_hrs,0)            AS hours_reported,

  -- Categorical fields
  COALESCE(l.pay_type, '-NA')      AS pay_type,
  COALESCE(l.bill_lab_cat_cd,'-NA') AS bill_lab_cat_cd,
  COALESCE(l.genl_lab_cat_cd,'-NA') AS genl_lab_cat_cd,
  '-NA'                            AS lab_loc_cd,
  NULL                             AS s_ts_type_cd,
  NULL                             AS ts_ln_source_cd,

  -- Rates and financials (per your proc Txn 2 = 0 for revenue/billing)
  0                                AS target_rate,
  0                                AS actual_rate,
  COALESCE(l.act_amt,0)            AS amt_target,
  COALESCE(l.act_amt,0)            AS amt_actual,
  0                                AS amt_revenue,
  0                                AS amt_billing,
  COALESCE(l.act_amt,0)            AS direct_cost,
  0                                AS indirect_cost,

  -- PPA flags/counters/days (0 in Txn 2)
  0                                AS ppa_flag,
  0                                AS ppa_count,
  0                                AS ppa_days,

  -- Notes & audit
  l.notes                          AS notes,
  current_timestamp()              AS created_date,
  'bronze_to_silver_job'           AS created_user,
  l.time_stamp                     AS last_modified_date,
  'bronze_to_silver_job'           AS last_modified_user
FROM syn_lab_hs l
WHERE l.empl_id IS NOT NULL;

