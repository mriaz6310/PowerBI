spark.table("bronze_finance.ts_hdr_hs").createOrReplaceTempView("ts_hdr_hs")
spark.table("bronze_finance.ts_ln_hs").createOrReplaceTempView("ts_ln_hs")


CREATE OR REPLACE TEMP VIEW silver_fact_resources_view AS
SELECT
    -- static and derived IDs
    -1  AS dim_vendor_id,
    1   AS dim_transaction_type_id,
    h.empl_id,
    h.ts_hdr_seq_no,
    l.ts_ln_key,
    l.ts_ln_no,
    h.ts_dt,
    l.s_ts_type_cd,

    -- core metrics
    CASE WHEN l.entered_hrs <> 0 THEN l.lab_cst_amt / l.entered_hrs ELSE 0 END AS hourly_rate,
    l.entered_hrs                               AS hours,
    l.entered_hrs                               AS hours_pool_calc,
    l.lab_cst_amt                               AS lab_cost_amt,

    -- derived hour metrics
    CASE WHEN l.pay_type IN ('S10','S15') THEN 0 ELSE l.chg_hrs END AS hours_reported,
    COALESCE(l.pay_type,'-NA')               AS pay_type,

    -- categorical defaults
    COALESCE(l.bill_lab_cat_cd,'-NA')        AS bill_lab_cat_cd,
    COALESCE(l.genl_lab_cat_cd,'-NA')        AS genl_lab_cat_cd,
    COALESCE(l.lab_loc_cd,'-NA')             AS lab_loc_cd,

    -- flag logic
    CASE 
        WHEN l.s_ts_type_cd = 'C' 
         AND (l.notes LIKE '%75 line%' OR l.notes LIKE '%75line%') 
        THEN 1 ELSE 0 
    END AS ppa_flag,

    CASE 
        WHEN l.s_ts_type_cd = 'C'
         AND h.ts_hdr_seq_no = 1 
         AND l.ts_ln_no = 1 
        THEN 1 ELSE 0 
    END AS ppa_count,

    -- audit metadata
    l.notes,
    l.time_stamp         AS last_modified_date,
    current_timestamp()  AS created_date,
    'bronze_to_silver_job' AS created_user
FROM ts_hdr_hs h
JOIN ts_ln_hs  l
  ON h.ts_dt          = l.ts_dt
 AND h.empl_id        = l.empl_id
 AND h.s_ts_type_cd   = l.s_ts_type_cd
 AND h.ts_hdr_seq_no  = l.ts_hdr_seq_no;
