SELECT r.session_id, r.command, r.percent_complete, r.start_time,
       r.wait_type, r.wait_time, r.wait_resource
FROM sys.dm_exec_requests r
WHERE r.command LIKE 'BACKUP%' AND r.database_id = DB_ID('CART');



SELECT * FROM sys.dm_exec_requests
WHERE database_id = DB_ID('CART') AND session_id <> @@SPID;





fixing FDW;

-- Create extensions if missing
SELECT 'CREATE EXTENSION IF NOT EXISTS ' || quote_ident(w.fdwname) || ';'
FROM pg_foreign_server s
JOIN pg_foreign_data_wrapper w ON w.oid = s.srvfdw
GROUP BY w.fdwname;

-- Create servers
SELECT
  'CREATE SERVER ' || quote_ident(s.srvname) ||
  ' FOREIGN DATA WRAPPER ' || quote_ident(w.fdwname) ||
  CASE
    WHEN s.srvoptions IS NULL THEN ''
    ELSE ' OPTIONS (' ||
         array_to_string(
           ARRAY(
             SELECT quote_ident(split_part(o,'=',1)) || ' ' ||
                    quote_literal(substring(o from position('=' in o)+1))
             FROM unnest(s.srvoptions) AS o
           ), ', '
         ) || ')'
  END || ';'
FROM pg_foreign_server s
JOIN pg_foreign_data_wrapper w ON w.oid = s.srvfdw;






-- 1) FDW Extensions
SELECT 'CREATE EXTENSION IF NOT EXISTS ' || quote_ident(w.fdwname) || ';'
FROM pg_foreign_server s
JOIN pg_foreign_data_wrapper w ON w.oid = s.srvfdw
GROUP BY w.fdwname;

-- 2) CREATE SERVER statements
SELECT
  'CREATE SERVER ' || quote_ident(s.srvname) ||
  ' FOREIGN DATA WRAPPER ' || quote_ident(w.fdwname) ||
  CASE
    WHEN s.srvoptions IS NULL THEN ''
    ELSE ' OPTIONS (' ||
         array_to_string(
           ARRAY(
             SELECT quote_ident(split_part(o,'=',1)) || ' ' ||
                    quote_literal(substring(o from position('=' in o)+1))
             FROM unnest(s.srvoptions) AS o
           ), ', '
         ) || ')'
  END || ';'
FROM pg_foreign_server s
JOIN pg_foreign_data_wrapper w ON w.oid = s.srvfdw;

-- 3) CREATE USER MAPPING statements
SELECT
  'CREATE USER MAPPING FOR ' ||
  CASE WHEN m.umuser = 0 THEN 'PUBLIC' ELSE quote_ident(r.rolname) END ||
  ' SERVER ' || quote_ident(s.srvname) ||
  CASE
    WHEN m.umoptions IS NULL THEN ''
    ELSE ' OPTIONS (' ||
         array_to_string(
           ARRAY(
             SELECT quote_ident(split_part(o,'=',1)) || ' ' ||
                    quote_literal(substring(o from position('=' in o)+1))
             FROM unnest(m.umoptions) AS o
           ), ', '
         ) || ')'
  END || ';'
FROM pg_user_mappings m
JOIN pg_foreign_server s ON s.oid = m.srvid
LEFT JOIN pg_roles r ON r.oid = m.umuser;




SELECT n.nspname AS schema_name,
       c.relname AS materialized_view_name,
       r.usename AS owner
FROM pg_class c
JOIN pg_namespace n ON n.oid = c.relnamespace
JOIN pg_user r      ON r.usesysid = c.relowner
WHERE c.relkind = 'm'
  AND n.nspname = 'car_dm'
ORDER BY materialized_view_name;






SELECT schema_name,
       table_name,
       table_type
FROM pg_catalog.svv_redshift_tables
WHERE table_type = 'MATERIALIZED VIEW'
ORDER BY schema_name, table_name;






