SELECT r.session_id, r.command, r.percent_complete, r.start_time,
       r.wait_type, r.wait_time, r.wait_resource
FROM sys.dm_exec_requests r
WHERE r.command LIKE 'BACKUP%' AND r.database_id = DB_ID('CART');



SELECT * FROM sys.dm_exec_requests
WHERE database_id = DB_ID('CART') AND session_id <> @@SPID;





fixing FDW;

-- Create extensions if missing
SELECT 'CREATE EXTENSION IF NOT EXISTS ' || quote_ident(w.fdwname) || ';'
FROM pg_foreign_server s
JOIN pg_foreign_data_wrapper w ON w.oid = s.srvfdw
GROUP BY w.fdwname;

-- Create servers
SELECT
  'CREATE SERVER ' || quote_ident(s.srvname) ||
  ' FOREIGN DATA WRAPPER ' || quote_ident(w.fdwname) ||
  CASE
    WHEN s.srvoptions IS NULL THEN ''
    ELSE ' OPTIONS (' ||
         array_to_string(
           ARRAY(
             SELECT quote_ident(split_part(o,'=',1)) || ' ' ||
                    quote_literal(substring(o from position('=' in o)+1))
             FROM unnest(s.srvoptions) AS o
           ), ', '
         ) || ')'
  END || ';'
FROM pg_foreign_server s
JOIN pg_foreign_data_wrapper w ON w.oid = s.srvfdw;






-- 1) FDW Extensions
SELECT 'CREATE EXTENSION IF NOT EXISTS ' || quote_ident(w.fdwname) || ';'
FROM pg_foreign_server s
JOIN pg_foreign_data_wrapper w ON w.oid = s.srvfdw
GROUP BY w.fdwname;

-- 2) CREATE SERVER statements
SELECT
  'CREATE SERVER ' || quote_ident(s.srvname) ||
  ' FOREIGN DATA WRAPPER ' || quote_ident(w.fdwname) ||
  CASE
    WHEN s.srvoptions IS NULL THEN ''
    ELSE ' OPTIONS (' ||
         array_to_string(
           ARRAY(
             SELECT quote_ident(split_part(o,'=',1)) || ' ' ||
                    quote_literal(substring(o from position('=' in o)+1))
             FROM unnest(s.srvoptions) AS o
           ), ', '
         ) || ')'
  END || ';'
FROM pg_foreign_server s
JOIN pg_foreign_data_wrapper w ON w.oid = s.srvfdw;

-- 3) CREATE USER MAPPING statements
SELECT
  'CREATE USER MAPPING FOR ' ||
  CASE WHEN m.umuser = 0 THEN 'PUBLIC' ELSE quote_ident(r.rolname) END ||
  ' SERVER ' || quote_ident(s.srvname) ||
  CASE
    WHEN m.umoptions IS NULL THEN ''
    ELSE ' OPTIONS (' ||
         array_to_string(
           ARRAY(
             SELECT quote_ident(split_part(o,'=',1)) || ' ' ||
                    quote_literal(substring(o from position('=' in o)+1))
             FROM unnest(m.umoptions) AS o
           ), ', '
         ) || ')'
  END || ';'
FROM pg_user_mappings m
JOIN pg_foreign_server s ON s.oid = m.srvid
LEFT JOIN pg_roles r ON r.oid = m.umuser;










#check view
DO $$ 
DECLARE s TEXT;
BEGIN
  FOR s IN SELECT nspname FROM pg_namespace WHERE nspname NOT LIKE 'pg_%' AND nspname != 'information_schema'
  LOOP
    EXECUTE format('GRANT SELECT ON ALL TABLES IN SCHEMA %I TO your_user', s);
  END LOOP;
END $$;



SELECT table_schema, table_name, tableowner
FROM pg_tables
WHERE table_schema NOT IN ('pg_catalog', 'information_schema')
ORDER BY table_schema, table_name;




SELECT
  schemaname AS schema_name,
  viewname AS view_name,
  viewowner AS owner
FROM pg_views
ORDER BY schema_name, view_name;



